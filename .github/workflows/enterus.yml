name: enterus

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/enterus.yml'
      - 'apps/enterus/api/**'
      - 'libs/**'
env:
  NX_NON_NATIVE_HASHER: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm i

      - name: Build app
        run: npx nx run enterus-api:build --configuration=production

      - name: Copy all necessary files
        run: |
          mkdir temp
          cp -r dist/apps/enterus/api/main.js temp
          cp -r dist/apps/enterus/api/package.json temp
          cp -r apps/enterus/api/dockerfile temp

      - name: build and export docker image
        run: |
          cd temp
          docker build -t enterus-api .
          docker save -o enterus-api.tar enterus-api

      - name: Create SSH ditectory
        run: mkdir ~/.ssh && chmod 700 ~/.ssh

      - name: Install the deploy key
        run: echo "${{ secrets.SSH_DEPLOY_KEY }}" > ~/.ssh/deploy && chmod 600 ~/.ssh/deploy

      - name: Create the known hosts
        run: echo "${{ secrets.SSH_KNOWN_HOST }}" > ~/.ssh/known_hosts

      - name: Transfer files to Exord Online Hosted Server
        # run: scp -r -i ~/.ssh/deploy ./temp/enterus-api.tar ${{secrets.SSH_USERNAME}}@${{secrets.SSH_HOST}}:/root/temp -p 24
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "temp/enterus-api.tar"
          target: "/root/temp"

      - name: Run the app on Exord Online Hosted Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd temp
            docker rm -f enterus-api
            docker rmi enterus-api
            rm .env
            echo "MONGODB_URI=${{secrets.ENTERUS_MONGODB_URI}}" >> .env
            echo "CLOUDINARY_NAME=${{secrets.CLOUDINARY_NAME}}" >> .env
            echo "CLOUDINARY_API_KEY=${{secrets.CLOUDINARY_API_KEY}}" >> .env
            echo "CLOUDINARY_API_SECRET=${{secrets.CLOUDINARY_API_SECRET}}" >> .env
            echo "JWT_SECRET=${{secrets.JWT_SECRET}}" >> .env
            # echo "STRIPE_SECRET_KEY=${{secrets.STRIPE_SECRET_KEY}}" >> .env
            # echo "STRIPE_PUBLIC_KEY=${{secrets.STRIPE_PUBLIC_KEY}}" >> .env
            # echo "STRIPE_WEBHOOK_SECRET=${{secrets.STRIPE_WEBHOOK_SECRET}}" >> .env
            # echo "HOMEZZ_PRODUCT_ID=${{secrets.HOMEZZ_PRODUCT_ID}}" >> .env
            # echo "SEND_GRID_KEY=${{secrets.SEND_GRID_KEY}}" >> .env
            docker load -i enterus-api.tar
            docker run --env-file .env -d --name enterus-api -p 9090:9090Â enterus-api

# name: remote ssh command
# on: [push]
# jobs:

#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     steps:
#     - name: executing remote ssh commands using password
#       uses: appleboy/ssh-action@v1.0.0
#       with:
#         host: ${{ secrets.SSH_HOST }}
#         username: ${{ secrets.SSH_USERNAME }}
#         password: ${{ secrets.SSH_PASSWORD }}
#         port: ${{ secrets.SSH_PORT }}
#         script: whoami
